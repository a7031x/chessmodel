<UserControl x:Class="UI.ChessItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- PressedBrush 用于 Button、Radio Button、CheckBox 中的 Pressed -->
            <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="CheckedBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFA3CEAC" Offset="0.0"/>
                <GradientStop Color="#FFF2FF11" Offset="1.0"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </LinearGradientBrush>
            <!-- MouseOverBrush 用于 Button、Radio Button、CheckBox 中的 MouseOver -->
            <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </LinearGradientBrush>
            <!-- DefaultedBorderBrush 用于显示 KeyBoardFocus -->
            <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFD5E2F1" Offset="0.0"/>
                <GradientStop Color="#FF4F64A5" Offset="1.0"/>
            </LinearGradientBrush>

            <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">

                            <!-- 我们将 Grid 用作根，原因在于这便于添加更多的元素来自定义按钮 -->
                            <Grid x:Name="Grid">
                                <Ellipse x:Name="Border" Fill="{StaticResource DefaultedBorderBrush}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                            <!--每种状态都基于模板中的 Border 来设置画笔 -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Stroke" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Fill" Value="{DynamicResource CheckedBrush}" TargetName="Border"/>
                                    <Setter Property="Stroke" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
                                    <Setter Property="Stroke" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                    <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <!--<Ellipse Stroke="#FF231E1E" StrokeThickness="1">
            <Ellipse.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="1"/>
            </Ellipse.Effect>
            <Ellipse.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF1FB16" Offset="0"/>
                    <GradientStop Color="#FFA5D149" Offset="1"/>
                </LinearGradientBrush>
            </Ellipse.Fill>
        </Ellipse>-->
        <CheckBox Name="label" Content="{Binding Type, Converter={x:Static local:ChessToStringConverter.Value}}"
               Foreground="{Binding Type, Converter={x:Static local:ChessToBrushConverter.Value}}"
               HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold" Checked="label_Checked" Unchecked="label_Checked"
               IsEnabled="{Binding CanCheck}"/>
    </Grid>
</UserControl>